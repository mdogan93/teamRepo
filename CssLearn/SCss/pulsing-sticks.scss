$symbol_height:11px;                        // pulsing-sticklerin yüksekliğini belirler.(margin, boşluk ve genişlik buna bağlı) 
$symbol_width:1em;                          // pulsing-sticklerin kalınlığını belirler.
$upperground: #fff;                         // pulsing-stickleri üst kısmının rengini belirler.
$lowerground: #fff;                         // pulsing-stickleri alt kısmının rengini belirler.
$border-width:0px;                          //Borderın kalınlığını belirler
$border-style:groove;                       //Borderın görünümünü belirler
$border-top-radius:0px;                     //Top left border'ın eğim derecesini belirler (0 kare, 50 ve üzeri çember)
$border-bottom-radius:0px;                  //Bottom left border'ın eğim derecesini belirler (0 kare, 50 ve üzeri çember)


$listOfParsers: ms webkit o moz;            //Used for browser compatibility

// @param {String} $property - Property name
// @param {*} $value - Property value

@mixin prefix($property,$value,$prefixes: () ) {
    @each $prefix in $prefixes{
        #{'-' + $prefix + '-' + $property}: $value;
    }   
    #{$property}: $value;
}

@keyframes pulsing-frame{
    0%, 80%, 100%{
        height: 3*$symbol_height;
    }
    40%{    
        height: 4.5*$symbol_height;
    }
}
     
.pulsing-sticks,
.pulsing-sticks:before,
.pulsing-sticks:after {
  background:$upperground;
  @include prefix(animation, pulsing-frame 1s infinite ease-in-out, $listOfParsers);
  width:$symbol_width;
  @include prefix(border-radius,$border-top-radius $border-bottom-radius, $listOfParsers);
  border-bottom:$border-width $border-style $lowerground;
  
}
.pulsing-sticks {
  color:$upperground;
  margin:auto;
  text-indent:-9999em;
  position:relative;
  font-size:$symbol_height;
  @include prefix(animation-delay,-0.16s, $listOfParsers);
  @include prefix(transform, translateZ(0) , $listOfParsers);

  &:before,
  &:after {
    position:absolute;
    top:0;
    content:'';
  }

  &:before {
    left:-1.5*$symbol_width;  
    @include prefix(animation-delay,-0.32s,$listOfParsers); 
  }
  &:after {
    left:1.5*$symbol_width;   
  }
}


